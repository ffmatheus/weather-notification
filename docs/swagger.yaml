definitions:
  entity.Frequency:
    enum:
    - DIARIA
    - SEMANAL
    type: string
    x-enum-varnames:
    - FrequencyDaily
    - FrequencyWeekly
  handler.CreateGlobalNotificationRequest:
    properties:
      frequency:
        allOf:
        - $ref: '#/definitions/entity.Frequency'
        enum:
        - DIARIA
        - SEMANAL
        example: DIARIA
      time_of_day:
        example: "14:00"
        type: string
    required:
    - frequency
    - time_of_day
    type: object
  handler.CreateNotificationRequest:
    properties:
      location_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      schedule_for:
        example: "2025-02-03T21:35:00-03:00"
        type: string
      user_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    required:
    - location_id
    - schedule_for
    - user_id
    type: object
  handler.CreateUserRequest:
    properties:
      city:
        example: São Paulo
        type: string
      email:
        example: matheus@exemplo.com
        type: string
      name:
        example: Matheus
        type: string
    required:
    - city
    - email
    - name
    type: object
  handler.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
  handler.ToggleOptOutRequest:
    properties:
      opt_out:
        type: boolean
    type: object
  handler.UpdateUserRequest:
    properties:
      city:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Serviço de notificações de previsão do tempo
  title: API de Notificação de Previsão do Tempo
  version: "1.0"
paths:
  /api/notifications:
    post:
      consumes:
      - application/json
      description: Cria um agendamento de notificação de previsão do tempo
      parameters:
      - description: Dados do agendamento
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateNotificationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Agenda uma nova notificação
      tags:
      - Notificações
  /api/notifications/{user_id}:
    get:
      description: Retorna todas as notificações de um usuário específico
      parameters:
      - description: ID do usuário
        format: uuid
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Lista notificações do usuário
      tags:
      - Notificações
  /api/notifications/global:
    get:
      description: Retorna todas as notificações globais ativas
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Lista notificações globais ativas
      tags:
      - Notificações Globais
    post:
      consumes:
      - application/json
      description: Cria uma notificação que será enviada para todos os usuários ativos
        no horário especificado
      parameters:
      - description: Dados da notificação global
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateGlobalNotificationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Cria uma notificação global
      tags:
      - Notificações Globais
  /api/users:
    get:
      description: Retorna uma lista de todos os usuários cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Lista usuários
      tags:
      - Usuários
    post:
      consumes:
      - application/json
      description: Cria um usuário e vincula a uma localização
      parameters:
      - description: Dados do usuário
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Cria um novo usuário
      tags:
      - Usuários
  /api/users/{id}:
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um usuário
      parameters:
      - description: ID do usuário
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Dados para atualização
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Atualiza um usuário
      tags:
      - Usuários
  /api/users/{user_id}/optout:
    patch:
      consumes:
      - application/json
      description: Permite ao usuário ativar ou desativar o opt-out de notificações
      parameters:
      - description: ID do usuário
        format: uuid
        in: path
        name: user_id
        required: true
        type: string
      - description: Novo status do opt-out
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ToggleOptOutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Ativa ou desativa o opt-out do usuário
      tags:
      - Usuários
  /api/weather/forecast:
    get:
      description: Retorna a previsão do tempo para uma localidade
      parameters:
      - description: ID da localidade
        format: uuid
        in: query
        name: location_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Busca previsão do tempo
      tags:
      - Clima
  /api/weather/search:
    get:
      description: Busca uma cidade no CPTEC por nome
      parameters:
      - description: Nome da cidade
        in: query
        name: city
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Busca cidade por nome
      tags:
      - Localizações
  /api/webhook/test/notifications:
    post:
      consumes:
      - application/json
      description: Endpoint para testar o recebimento de notificações genéricas
      parameters:
      - description: JSON genérico de notificação
        in: body
        name: notification
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Recebe notificações (endpoint de teste)
      tags:
      - Receptor
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
