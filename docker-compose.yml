version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - .:/app
      - go_modules:/go/pkg/mod
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    networks:
      - weather-network

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=weather_user
      - POSTGRES_PASSWORD=weather_pass
      - POSTGRES_DB=weather_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - weather-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" 
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=teste
      - RABBITMQ_DEFAULT_PASS=teste
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  go_modules:
  rabbitmq_data:

networks:
  weather-network:
    driver: bridge